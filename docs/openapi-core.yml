openapi: 3.0.3
info:
  title: Java API Exercise - Core Criteria
  description: |-
  version: 0.2.2

servers:
  - url: http://localhost:4000/book
tags:
  - name: books
paths:
  /books:
    post:
      tags:
        - books
      summary: Book POST route
      description: Description of an book POST route
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    get:
      tags:
        - books
      summary: book GET route
      description: Description of an books GET route
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book/getAll'
  /books/{id}:
    put:
      tags:
        - books
      summary: Book PUT route
      description: Description of an books PUT route
      parameters:
        - name: id
          in: path
          description: The ID of the example to update
          required: true
          schema:
            type: integer
        - name: title
          in: path
          description: The title of the example to update
          required: true
          schema:
            type: String
        - name: genre
          in: path
          description: The genre of the book to update
          required: true
          schema:
            type: String
        - name: author_id
          in: path
          description: The Author Id of the book to update
          required: true
          schema:
            type: Integer
        - name: publisher_id
          in: path
          description: The Publisher Id of the book to update
          required: true
          schema:
            type: Integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book/update'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book/update'
    delete:
      tags:
        - books
      summary: Book DELETE route
      description: Description of an book DELETE route
      parameters:
        - name: id
          in: path
          description: The ID of the book to delete
          required: true
          schema:
            type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book/delete'

components:
  schemas:
    CreateBook:
      type: object
      required: [title,genre ,author_id , publisher_id]
      properties:
        title:
          type: string
          example: "100 years of Solitude"
        genre:
          type: string
          format: string
          example: "magical realism"
        author_id:
          type: integer
          format: integer
          example: "1"
        publisher_id:
          type: integer
          format: integer
          example: "2"
    Book:
      type: object
      properties:
        title:
          type: string
          example: "100 years of Solitude"
        genre:
          type: string
          format: string
          example: "magical realism"
        author_id:
          type: integer
          format: integer
          example: "1"
        publisher_id:
          type: integer
          format: integer
          example: "2"
    AllBooks:
      type: array
      items:
        $ref: '#/components/schemas/Book/create'
